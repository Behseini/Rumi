<?php
/**
 * Plugin Name: Women Eyeglasses Final
 * Plugin URI: http://goproweb.ca
 * Description: This plugin is  for adding Custom Post Types and Taxonomies into WP. This Plugin is developed by Goproweb.ca .
 * Version: 1.0
 * Author: Behrouz - Go Pro Web
 * Author URI: http://goproweb.ca
 * Copyright 2016  Behrouz Hosseini  (Email : info@goproweb.ca)
 */
  
 
// Register Custom Taxonomy
function tax_we_brands() {

	$labels = array(
		'name'                       => 'Brands',
		'singular_name'              => 'Brand',
		'menu_name'                  => 'Brands',
		'all_items'                  => 'All Brands',
		'parent_item'                => 'Parent Brands',
		'parent_item_colon'          => 'Parent Brands',
		'new_item_name'              => 'Brand Name',
		'add_new_item'               => 'Add New Brand',
		'edit_item'                  => 'Edit Brand',
		'update_item'                => 'Update Brand Type',
		'separate_items_with_commas' => 'Separate Brand with commas',
		'search_items'               => 'Search Brand',
		'add_or_remove_items'        => 'Add or remove Brand Type',
		'choose_from_most_used'      => 'Choose from the most used Brand',
		'not_found'                  => 'Brand Not Found',
	);
	$args = array(
		'labels'                     => $labels,
		'hierarchical'               => true,
		'public'                     => true,
		'show_ui'                    => true,
		'show_admin_column'          => true,
		'show_in_nav_menus'          => true,
		'show_tagcloud'              => true,
	);
	register_taxonomy( 'we-brands', array( ), $args );

}

add_action( 'init', 'tax_we_brands', 0 );

function tax_we_shapes() {
    
        $labels = array(
            'name'                       => 'Shapes',
            'singular_name'              => 'Shape',
            'menu_name'                  => 'Shapes',
            'all_items'                  => 'All Shapes',
            'parent_item'                => 'Parent Shapes',
            'parent_item_colon'          => 'Parent Shapes',
            'new_item_name'              => 'Shape Name',
            'add_new_item'               => 'Add New Shape',
            'edit_item'                  => 'Edit Shape',
            'update_item'                => 'Update Shape Type',
            'separate_items_with_commas' => 'Separate Shape with commas',
            'search_items'               => 'Search Shape',
            'add_or_remove_items'        => 'Add or remove Shape Type',
            'choose_from_most_used'      => 'Choose from the most used Shape',
            'not_found'                  => 'Shape Not Found',
        );
        $args = array(
            'labels'                     => $labels,
            'hierarchical'               => true,
            'public'                     => true,
            'show_ui'                    => true,
            'show_admin_column'          => true,
            'show_in_nav_menus'          => true,
            'show_tagcloud'              => true,
        );
        register_taxonomy( 'we-shapes', array( ), $args );
    
    }
    
    add_action( 'init', 'tax_we_shapes', 0 );

function cpt_women_eyeglasses() {

	$labels = array(
		'name'                 => 'Women Eyeglasses',
		'singular_name'        => 'Women Eyeglass',
		'menu_name'            => 'Women Eyeglasse',
        'name_admin_bar'       => 'Women Eyeglasses',
		'parent_item_colon'    => 'Parent Women Eyeglasses',
		'all_items'            => 'All Women Eyeglasses',
		'view_item'            => 'View Women Eyeglass',
		'add_new_item'         => 'Add New Women Eyeglass',
		'add_new'              => 'Add New Women Eyeglass',
        'new_item'             => 'New Women Eyeglasses',
		'edit_item'            => 'Edit Women Eyeglassese Item',
		'update_item'          => 'Update Women Eyeglasses Item',
		'search_items'         => 'Search Women Eyeglasses Item',
		'not_found'            => 'Women Eyeglassese Not found',
		'not_found_in_trash'   => 'Women Eyeglassese Not found in Trash',
	);
	$args = array(
		'label'                => 'Women Eyeglasses',
		'description'          => 'This Post Type Adds Women Eyeglasses to Website',
		'labels'               => $labels,
		'supports'             => array('title'),
		'taxonomies'           => array( ),
		'hierarchical'         => true,
		'public'               => true,
		'show_ui'              => true,
		'show_in_menu'         => true,
		'show_in_nav_menus'    => true,
		'show_in_admin_bar'    => true,
		'menu_position'        => 5,
        'menu_icon'            => 'dashicons-layout',
        'rewrite'              => array( 'slug' => 'women-eyeglasses', 'with_front' => false ),
		'can_export'           => true,
		'has_archive'          => true,
		'exclude_from_search'  => false,
		'publicly_queryable'   => true,
		'capability_type'      => 'post',
	);
	register_post_type( 'women_eyeglasses', $args );

}

add_action( 'init', 'cpt_women_eyeglasses', 0 );


add_action( 'add_meta_boxes', 'women_eyeglasses_mtbox' );

function women_eyeglasses_mtbox()
{
$post_types = array ( 'women_eyeglasses');
 foreach( $post_types as $post_type ){
    add_meta_box(
        "product-detail",
        "Women Eyeglasses Details ",
        "render_women_metas",
        $post_type,
        "normal",
        "high"
    );
	}
	
}
// pName:null,
// pBrand:null,
// pPrice:null,
// pSKU:null,
// pMaterial:null,
// pGender:null,
// pColorsNumber:null,
// pColorsName:[],
// pColorsImages:[],
// pSizesNumber:null,
// pSizesDetails:[],
// pShape:null,
// pRim:null,
// pThumbnail:null,

function render_women_metas( $post )
{
$we_productMetas = get_post_custom( $post->ID );
$name = isset( $we_productMetas['name_box'] ) ? esc_attr( $we_productMetas['name_box'][0] ) : '';
$brand = isset( $we_productMetas['brand_box'] ) ? esc_attr( $we_productMetas['brand_box'][0] ) : '';
$price = isset( $we_productMetas['price_box'] ) ? esc_attr( $we_productMetas['price_box'][0] ) : '';
$SKU = isset( $we_productMetas['sku_box'] ) ? esc_attr( $we_productMetas['sku_box'][0] ) : '';
$material = isset( $we_productMetas['material_box'] ) ? esc_attr( $we_productMetas['material_box'][0] ) : '';
$gender = isset( $we_productMetas['gender_box'] ) ? esc_attr( $we_productMetas['gender_box'][0] ) : '';
$colorsNumber = isset( $we_productMetas['cNumber_box'] ) ? esc_attr( $we_productMetas['cNumber_box'][0] ) : '';
$colorsNames = isset( $we_productMetas['cNames_box'] ) ? esc_attr( $we_productMetas['cNames_box'][0] ) : '';
$colorImages = isset( $we_productMetas['cImages_box'] ) ? esc_attr( $we_productMetas['cImages_box'][0] ) : '';
$sizeNumber = isset( $we_productMetas['sNumber_box'] ) ? esc_attr( $we_productMetas['sNumber_box'][0] ) : '';
$sizeOptions = isset( $we_productMetas['sOptions_box'] ) ? esc_attr( $we_productMetas['sOptions_box'][0] ) : '';
$shape = isset( $we_productMetas['shape_box'] ) ? esc_attr( $we_productMetas['shape_box'][0] ) : '';
$rim = isset( $we_productMetas['rim_box'] ) ? esc_attr( $we_productMetas['rim_box'][0] ) : '';
$thumbnail = isset( $we_productMetas['thumbnail_box'] ) ? esc_attr( $we_productMetas['thumbnail_box'][0] ) : '';

// data-brand
// data-material
// data-gender
// data-color
// data-shape
// data-rim
// data-sizes[]

// $colors = isset( $we_productMetas['colors_box'] ) ? esc_attr( $we_productMetas['colors_box'][0] ) : '';
// $colorsOpt = isset( $we_productMetas['colorsOpt_box'] ) ? esc_attr( $we_productMetas['colorsOpt_box'][0] ) : '';
// $sizes = isset( $we_productMetas['sizes_box'] ) ? esc_attr( $we_productMetas['sizes_box'][0] ) : '';
// $sizesOpt = isset( $we_productMetas['sizesOpt_box'] ) ? esc_attr( $we_productMetas['sizesOpt_box'][0] ) : '';
// $brandsOpt = isset( $we_productMetas['brandsOpt_box'] ) ? esc_attr( $we_productMetas['brandsOpt_box'][0] ) : '';
// $thumbnailURL = isset( $we_productMetas['thumbnail_box'] ) ? esc_attr( $we_productMetas['thumbnail_box'][0] ) : '';


wp_nonce_field( 'my_meta_box_nonce', 'meta_box_nonce' );
	?>
    <table style="width:35%">
        <tr>
            <td><label for="name-box">Product Name:</label></td>
            <td align="left"><input type="text" class="widefat"  name="name_box" id="name-box" value="<?php echo $name; ?>" /></td>
        </tr> 
    <tr>
        <td ><label for="brands-box">Brand Options</label></td>
        <td align="left">
        <select name="brand_box" id="brandsOpy-box" class="widefat" >
            <option value="Super flex" <?php selected( $brand, 'Superflex' ); ?>>Superflex</option>
            <option value="Bertellei" <?php selected( $brand, 'Bertellei' ); ?>>Bertellei</option>
            <option value="Jill Stuart" <?php selected( $brand, 'Jill Stuart' ); ?>>Jill Stuart</option>
            <option value="Moleskine" <?php selected( $brand, 'Moleskine' ); ?>>Moleskine</option>
            <option value="Perry Elis" <?php selected( $brand, 'Perry Elis' ); ?>>Perry Elis</option>
            <option value="Elizabeth Arden" <?php selected( $brand, 'Elizabeth Arden' ); ?>>Elizabeth Arden</option>
		</select>
        
        </td>
        </tr> 
        <tr>
        <td><label for="price-box">Product Price: $</label></td>
        <td align="left"><input type="text" class="widefat"  name="price_box" id="price-box" value="<?php echo $price; ?>" /></td>
        </tr> 
        <tr>
        <td><label for="sku-box">SKU</label></td>
        <td align="left"><input type="text" class="widefat"  name="sku_box" id="sku-box" value="<?php echo $SKU; ?>" /></td>
        </tr> 

            <tr>
        <td ><label for="material-box">Material</label></td>
        <td align="left">
        <select name="material_box" id="material-box" class="widefat" >
            <option value="Acetate" <?php selected( $material, 'Acetate' ); ?>>Acetate</option>
            <option value="Metal" <?php selected( $material, 'Metal' ); ?>>Metal</option>
            <option value="Plastic" <?php selected( $material, 'Plastic' ); ?>>Plastic</option>
            <option value="Combination" <?php selected( $material, 'Combination' ); ?>>Combination</option>
		</select>
        
        </td>
        </tr>
        <tr>
        <td ><label for="gender-box">Gender </label></td>
        <td align="left"><input type="text" class="widefat" name="gender_box" id="gender-box" value="<?php echo $gender; ?>" /></td>
        </tr>

        <tr>
        <td ><label for="cNumber-box">Available Colors </label></td>
        <td align="left"><input type="text" class="widefat" name="cNumber_box" id="cNumber-box" value="<?php echo $colorsNumber; ?>" /></td>
        </tr>  
        <tr>
        <td ><label for="cNames-box">Color Names </label></td>
        <td align="left"><input type="text" class="widefat" name="cNames_box" id="cNames-box" value="<?php echo $colorsNames; ?>" /></td>
        </tr>  
        <tr>
        <tr>
        <td ><label for="cImages-box">Color Images </label></td>
        <td align="left"><input type="text" class="widefat" name="cImages_box" id="cImages-box" value="<?php echo $colorImages; ?>" /></td>
        </tr>  
        <tr>
        <td ><label for="sNumber-box">Available Size Number </label></td>
        <td align="left"><input type="text" class="widefat" name="sNumber_box" id="sNumber-box" value="<?php echo $sizeNumber; ?>" /></td>
        </tr>  
        <tr>
        <td ><label for="sOptions-box">Size Options </label></td>
        <td align="left"><input type="text" class="widefat" name="sOptions_box" id="sOptions-box" value="<?php echo $sizeOptions; ?>" /></td>
        </tr> 
        <tr>
        <td ><label for="shape-box">Shape</label></td>
        <td align="left">
        <select name="shape_box" id="shape-box" class="widefat" >
            <option value="Acetate" <?php selected( $shape, 'Acetate' ); ?>>Acetate</option>
            <option value="Metal" <?php selected( $shape, 'Metal' ); ?>>Metal</option>
            <option value="Plastic" <?php selected( $shape, 'Plastic' ); ?>>Plastic</option>
            <option value="Combination" <?php selected( $shape, 'Combination' ); ?>>Combination</option>
		</select>
        
        </td>
        </tr>

                    <tr>
        <td ><label for="rim-box">Rim</label></td>
        <td align="left">
        <select name="rim_box" id="rim-box" class="widefat" >
            <option value="Acetate" <?php selected( $rim, 'Acetate' ); ?>>Acetate</option>
            <option value="Metal" <?php selected( $rim, 'Metal' ); ?>>Metal</option>
            <option value="Plastic" <?php selected( $rim, 'Plastic' ); ?>>Plastic</option>
            <option value="Combination" <?php selected( $rim, 'Combination' ); ?>>Combination</option>
		</select>
        
        </td>
        </tr>
        <tr>
        <td ><label for="thumbnail-box">Thumbnail Image </label></td>
        <td align="left"><input type="text" class="widefat" name="thumbnail_box" id="thumbnail-box" value="<?php echo $thumbnail; ?>" /></td>
        </tr>      
    </table>
<?php	
}


add_action( 'save_post', 'we_metas_save' );
function we_metas_save( $post_id )
{
	// Bail if we're doing an auto save
	if( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) return;
	
	// if our nonce isn't there, or we can't verify it, bail
	if( !isset( $_POST['meta_box_nonce'] ) || !wp_verify_nonce( $_POST['meta_box_nonce'], 'my_meta_box_nonce' ) ) return;
	
	// if our current user can't edit this post, bail
	if( !current_user_can( 'edit_post' ) ) return;
	
	// now we can actually save the data
	$allowed = array( 
		'a' => array( // on allow a tags
			'href' => array() // and those anchords can only have href attribute
		)
	);
	
	// Probably a good idea to make sure your data is set
	if( isset( $_POST['name_box'] ) ){
        update_post_meta( $post_id, 'name_box', wp_kses( $_POST['name_box'], $allowed ) );
    }
	if( isset( $_POST['price_box'] ) ){
		update_post_meta( $post_id, 'price_box', wp_kses( $_POST['price_box'], $allowed ) );
    }
 	if( isset( $_POST['colors_box'] ) ){
		update_post_meta( $post_id, 'colors_box', wp_kses( $_POST['colors_box'], $allowed ) );
    }  
    if( isset( $_POST['colorsOpt_box'] ) ){
		update_post_meta( $post_id, 'colorsOpt_box', wp_kses( $_POST['colorsOpt_box'], $allowed ) );
    }   
    if( isset( $_POST['sizes_box'] ) ){
		update_post_meta( $post_id, 'sizes_box', wp_kses( $_POST['sizes_box'], $allowed ) );
    }  
    if( isset( $_POST['sizesOpt_box'] ) ){
		update_post_meta( $post_id, 'sizesOpt_box', wp_kses( $_POST['sizesOpt_box'], $allowed ) );
    }  
    if( isset( $_POST['brandsOpt_box'] ) ){
		update_post_meta( $post_id, 'brandsOpt_box', wp_kses( $_POST['brandsOpt_box'], $allowed ) );
    }  
    if( isset( $_POST['thumbnail_box'] ) ){
		update_post_meta( $post_id, 'thumbnail_box', wp_kses( $_POST['thumbnail_box'], $allowed ) );
    }  
    

}

// add_action( 'save_post', 'wpse75679_save_post' );
// function wpse75679_save_post( $post_id )
// {
//     if( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) return;

//     // verify post is not a revision
//     if ( ! wp_is_post_revision( $post_id ) ) {

//     // unhook this function to prevent infinite loop
//     remove_action( 'save_post', 'wpse75679_save_post' );

//     // update the post slug and title
//     wp_update_post( array(
//         'ID' => $post_id,
//         'post_title' => 'name_box',
//         'post_name' => 'name_box'
//     ));

//     // re-hook this function
//     add_action( 'save_post', 'wpse75679_save_post' );
// }

add_filter( 'manage_edit-women_eyeglasses_columns', 'we_columns' ) ;

function we_columns( $columns ) {

	$columns = array(
		'cb' => '<input type="checkbox" />',
		// 'name' => __( 'Women Eyeglass Title' ),
		'title' => __( 'Women Eyeglass Title' ),
        'brand' => __( 'Brand' ),
        'thumbnail'=> __('Product Image'),
		'date' => __( 'Publish Date' )
	);

	return $columns;
}

add_action( 'manage_women_eyeglasses_posts_custom_column', 'my_manage_movie_columns', 10, 2 );

function my_manage_movie_columns( $column, $post_id ) {
	global $post;

	switch( $column ) {
		// case 'name' :
        //             $name = get_post_meta( $post_id, 'name_box', true );
        //             if ( empty( $name ) )
        //                 echo 'Unknown';
        //             else
        //             // get_edit_post_link( $post_id )
        //             // echo '<a href="'.get_edit_post_link().'">'.$name.'</a>';
        //             echo $name;
        //             break;
		case 'brand' :
                    $barand = get_post_meta( $post_id, 'brandsOpt_box', true );
                    if ( empty( $barand ) )
                        echo 'Unknown';
                    else
                    echo $barand;
        
                    break;
		case 'thumbnail' :
                    $thumbnail = get_post_meta( $post_id, 'thumbnail_box', true );
                    if ( empty( $thumbnail ) )
                        echo 'Unknown';
                    else
                    echo '<img src="'.$thumbnail.'" width="120" height="120" />';
        
                    break;
		default :
			break;
	}
}
// add_filter( 'list_table_primary_column', 'fix_actions_primary_column', 10, 2 );
// function fix_actions_primary_column( $default, $screen ) {
//     if ( 'edit-women_eyeglasses' === $screen ) {
//         $default = 'name';
//     }
//     return $default;
// }



?>
